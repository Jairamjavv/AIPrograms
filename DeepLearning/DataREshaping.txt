from skimage.transform import resize
import cv2
# reading the image from the local system

path = './save'
imgs = []
paths = []
for root, dirs, files in os.walk(path):
    assets = files
    for i in assets:
        tempImg = os.path.join(os.getcwd(),'save',i)
#         tempImg = '{}\\{}'.format(path, i)
        paths.append(tempImg)
        img_read = cv2.imread(tempImg)
        imgs.append(img_read)         
print(paths[:2])
## Data Augmentation

from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img
datagen = ImageDataGenerator(
    rotation_range=40,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest'
)
X = []
grayscales = []
for i in paths:
    img = load_img(i)
    grayscale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    cv2.imshow('Grayscale', grayscale)
    grayscales.append(grayscale)
    x = img_to_array(img) # of shape (3,150,150)
    X.append(x)
X1 = []
for x in X:
    x = x.reshape((1,) + x.shape) # reshaping it into (1,3,150,150) and also run only 1 time
    X1.append(x)
i = 0
# the save_to_dir= path is given in the same directory of the file
for x in X1:
    for batch in datagen.flow(x, batch_size=1, save_to_dir='preview', save_prefix='cat',save_format='jpeg'):
        i+=1
        if i>2:
            break
    i=0
